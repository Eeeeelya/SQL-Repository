1341. Movie Rating problem from LeetCode website: https://leetcode.com/problems/movie-rating/description/
Queried using: PostgreSQL

Table: Movies
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| movie_id      | int     |
| title         | varchar |
+---------------+---------+

Table: Users
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| user_id       | int     |
| name          | varchar |
+---------------+---------+

Table: MovieRating
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| movie_id      | int     |
| user_id       | int     |
| rating        | int     |
| created_at    | date    |
+---------------+---------+
Write a solution to:
Find the name of the user who has rated the greatest number of movies. In case of a tie, return the lexicographically smaller user name.
Find the movie name with the highest average rating in February 2020. In case of a tie, return the lexicographically smaller movie name.

(SELECT users.name AS results FROM users JOIN movierating ON users.user_id = movierating.user_id
GROUP BY users.name ORDER BY COUNT(movierating.user_id) DESC, users.name ASC LIMIT 1)
UNION ALL
(SELECT movies.title AS results FROM movies JOIN movierating ON movierating.movie_id = movies.movie_id
WHERE EXTRACT(MONTH FROM movierating.created_at) = '02'
AND EXTRACT(YEAR FROM movierating.created_at) = '2020'
GROUP BY movies.title 
ORDER BY AVG(movierating.rating) DESC, movies.title ASC LIMIT 1);
