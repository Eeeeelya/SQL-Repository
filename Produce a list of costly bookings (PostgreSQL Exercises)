Produce a list of costly bookings, using a subquery problem from PostgreSQL Exercises website: https://pgexercises.com/questions/joins/tjsub.html
Queried using: PostgreSQL

Table: cd.members
+---------------+------------------------+
| Column Name   | Type                   |
+---------------+------------------------+
| memid         | integer                |
| surname       | character varying(200) |
| firstname     | character varying(200) |
| address       | character varying(300) |
| zipcode       | integer                |
| telephone     | character varying(20)  |
| recommendedby | integer                |
| joindate      | timestamp              |
+---------------+------------------------+

Table: cd.bookings
+---------------+------------------------+
| Column Name   | Type                   |
+---------------+------------------------+
| facid         | integer                |
| memid         | integer                |
| starttime     | timestamp              |
| slots         | integer                |
+---------------+------------------------+

Table: cd.facilities
+---------------------+------------------------+
| Column Name         | Type                   |
+---------------------+------------------------+
| facid               | integer                |
| name                | character varying(100) |
| membercost          | numeric                |
| guestcost           | numeric                |
| initialoutlay       | numeric                |
| mounthlymaintenance | numeric                |
+---------------------+------------------------+

Question:
The Produce a list of costly bookings exercise contained some messy logic: we had to calculate the booking cost in both the WHERE clause and the CASE statement.
Try to simplify this calculation using subqueries. For reference, the question was:
How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30?
Remember that guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0.
Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost.

Query:
SELECT member, facility, cost FROM
(SELECT mem.firstname ||' '|| mem.surname AS member, fac.name AS facility,
    CASE WHEN mem.memid = 0 THEN bks.slots*fac.guestcost ELSE bks.slots*fac.membercost END AS cost FROM cd.members mem
    JOIN cd.bookings bks ON bks.memid = mem.memid
    JOIN cd.facilities fac ON fac.facid = bks.facid
    WHERE bks.starttime < '2012-09-15' AND bks.starttime >= '2012-09-14') AS subq
WHERE cost > 30 ORDER BY cost DESC;
