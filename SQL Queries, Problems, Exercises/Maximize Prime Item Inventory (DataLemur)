Maximize Prime Item Inventory problem from DataLemur website: https://datalemur.com/questions/prime-warehouse-storage
Queried using: PostgreSQL

Table: employee 
+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| item_id        | integer |
| item_type      | string  |
| item_category  | string  |
| square_footage | decimal |        
+----------------+---------+

Question:
Write a query to find the maximum number of prime and non-prime batches that can be stored in the 500,000 square feet warehouse based on the following criteria:
Prioritize stocking prime batches
After accommodating prime items, allocate any remaining space to non-prime batches
Output the item_type with prime_eligible first followed by not_prime, along with the maximum number of batches that can be stocked.
Assumptions:
Again, products must be stocked in batches, so we want to find the largest available quantity of prime batches, and then the largest available quantity of non-prime batches
Non-prime items must always be available in stock to meet customer demand, so the non-prime item count should never be zero.
Item count should be whole numbers (integers).

Query:
WITH cte AS
(SELECT item_type, SUM(square_footage) total_sqft, COUNT(*) item_count 
FROM inventory 
GROUP BY item_type),

prime_stocks AS
(SELECT item_type, total_sqft, 
FLOOR(500000 / total_sqft) AS prime_batch_amount,
FLOOR(500000 / total_sqft) * item_count AS prime_item_amount
FROM cte 
WHERE item_type = 'prime_eligible')

SELECT item_type,
CASE WHEN item_type = 'prime_eligible' THEN FLOOR(500000 / total_sqft)*item_count
ELSE FLOOR((500000 - (SELECT FLOOR (500000 / total_sqft)*total_sqft
FROM prime_stocks)) / total_sqft) * item_count END AS item_count
FROM cte
ORDER BY item_type DESC;
